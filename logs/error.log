{"ts": "2025-08-20T15:43:45", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "f354496c01404fbd8192a40a2f7ff9f2", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 161, in wrapper\n    return fn(*args, **kwargs)\n  File \"D:\\TestTrackingSystem\\controllers\\auth_controller.py\", line 82, in change_password\n    result = PasswordService.change_password(\nTypeError: PasswordService.change_password() got an unexpected keyword argument 'username'"}
{"ts": "2025-08-20T17:02:28", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "6686fa29be7b4324848c6c6645e2a204", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_controller.py\", line 20, in login\n    user = UserService.authenticate(username, password)\n  File \"D:\\TestTrackingSystem\\services\\user_service.py\", line 62, in authenticate\n    print(user.password_hash)\nAttributeError: 'NoneType' object has no attribute 'password_hash'"}
{"ts": "2025-08-21T17:32:33", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "0d170d2bb6744dd1bc8c23d62b031462", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\connections.py\", line 806, in _write_bytes\n    self._sock.sendall(data)\nConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 951, in do_execute\n    cursor.execute(statement, parameters)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\cursors.py\", line 153, in execute\n    result = self._query(query)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\cursors.py\", line 322, in _query\n    conn.query(q)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\connections.py\", line 562, in query\n    self._execute_command(COMMAND.COM_QUERY, sql)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\connections.py\", line 864, in _execute_command\n    self._write_bytes(packet)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\connections.py\", line 809, in _write_bytes\n    raise err.OperationalError(\npymysql.err.OperationalError: (2006, \"MySQL server has gone away (ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 123, in wrapper\n    user = _resolve_user_from_token(token)\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 37, in _resolve_user_from_token\n    user = UserRepository.find_by_id(user_id)\n  File \"D:\\TestTrackingSystem\\repositories\\user_repository.py\", line 26, in find_by_id\n    return User.query.get(user_id)\n  File \"<string>\", line 2, in get\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\util\\deprecations.py\", line 386, in warned\n    return fn(*args, **kwargs)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\query.py\", line 1126, in get\n    return self._get_impl(ident, loading.load_on_pk_identity)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\query.py\", line 1135, in _get_impl\n    return self.session._get_impl(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 3873, in _get_impl\n    return db_load_fn(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\loading.py\", line 695, in load_on_pk_identity\n    session.execute(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2365, in execute\n    return self._execute_internal(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2251, in _execute_internal\n    result: Result[Any] = compile_state_cls.orm_execute_statement(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\context.py\", line 306, in orm_execute_statement\n    result = conn.execute(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1419, in execute\n    return meth(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 526, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1641, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 951, in do_execute\n    cursor.execute(statement, parameters)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\cursors.py\", line 153, in execute\n    result = self._query(query)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\cursors.py\", line 322, in _query\n    conn.query(q)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\connections.py\", line 562, in query\n    self._execute_command(COMMAND.COM_QUERY, sql)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\connections.py\", line 864, in _execute_command\n    self._write_bytes(packet)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\connections.py\", line 809, in _write_bytes\n    raise err.OperationalError(\nsqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (2006, \"MySQL server has gone away (ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))\")\n[SQL: SELECT user.id AS user_id, user.username AS user_username, user.password_hash AS user_password_hash, user.email AS user_email, user.phone AS user_phone, user.`role` AS user_role, user.active AS user_active, user.password_version AS user_password_version, user.password_updated_at AS user_password_updated_at, user.created_at AS user_created_at, user.updated_at AS user_updated_at \nFROM user \nWHERE user.id = %(pk_1)s]\n[parameters: {'pk_1': 1}]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)"}
{"ts": "2025-08-22T09:34:36", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "ce41d13fcd02454a85532c8dff520178", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\connections.py\", line 806, in _write_bytes\n    self._sock.sendall(data)\nConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 951, in do_execute\n    cursor.execute(statement, parameters)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\cursors.py\", line 153, in execute\n    result = self._query(query)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\cursors.py\", line 322, in _query\n    conn.query(q)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\connections.py\", line 562, in query\n    self._execute_command(COMMAND.COM_QUERY, sql)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\connections.py\", line 864, in _execute_command\n    self._write_bytes(packet)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\connections.py\", line 809, in _write_bytes\n    raise err.OperationalError(\npymysql.err.OperationalError: (2006, \"MySQL server has gone away (ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 123, in wrapper\n    user = _resolve_user_from_token(token)\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 37, in _resolve_user_from_token\n    user = UserRepository.find_by_id(user_id)\n  File \"D:\\TestTrackingSystem\\repositories\\user_repository.py\", line 26, in find_by_id\n    return User.query.get(user_id)\n  File \"<string>\", line 2, in get\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\util\\deprecations.py\", line 386, in warned\n    return fn(*args, **kwargs)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\query.py\", line 1126, in get\n    return self._get_impl(ident, loading.load_on_pk_identity)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\query.py\", line 1135, in _get_impl\n    return self.session._get_impl(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 3873, in _get_impl\n    return db_load_fn(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\loading.py\", line 695, in load_on_pk_identity\n    session.execute(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2365, in execute\n    return self._execute_internal(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2251, in _execute_internal\n    result: Result[Any] = compile_state_cls.orm_execute_statement(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\context.py\", line 306, in orm_execute_statement\n    result = conn.execute(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1419, in execute\n    return meth(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 526, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1641, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 951, in do_execute\n    cursor.execute(statement, parameters)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\cursors.py\", line 153, in execute\n    result = self._query(query)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\cursors.py\", line 322, in _query\n    conn.query(q)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\connections.py\", line 562, in query\n    self._execute_command(COMMAND.COM_QUERY, sql)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\connections.py\", line 864, in _execute_command\n    self._write_bytes(packet)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\pymysql\\connections.py\", line 809, in _write_bytes\n    raise err.OperationalError(\nsqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (2006, \"MySQL server has gone away (ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))\")\n[SQL: SELECT user.id AS user_id, user.username AS user_username, user.password_hash AS user_password_hash, user.email AS user_email, user.phone AS user_phone, user.`role` AS user_role, user.active AS user_active, user.password_version AS user_password_version, user.password_updated_at AS user_password_updated_at, user.created_at AS user_created_at, user.updated_at AS user_updated_at \nFROM user \nWHERE user.id = %(pk_1)s]\n[parameters: {'pk_1': 1}]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)"}
{"ts": "2025-08-22T10:13:34", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "62db4826da384fce9bcbecf505395b52", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 133, in wrapper\n    return fn(*args, **kwargs)\n  File \"D:\\TestTrackingSystem\\controllers\\user_controller.py\", line 90, in list_users\n    items, total, dept_map = UserService.list_users(\n  File \"D:\\TestTrackingSystem\\services\\user_service.py\", line 154, in list_users\n    return UserRepository.list(\n  File \"D:\\TestTrackingSystem\\repositories\\user_repository.py\", line 125, in list\n    q = q.filter(and_(*conditions))\nNameError: name 'and_' is not defined"}
{"ts": "2025-08-22T10:16:03", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "968752898e8f438a977a03cd3ad8dace", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 133, in wrapper\n    return fn(*args, **kwargs)\n  File \"D:\\TestTrackingSystem\\controllers\\user_controller.py\", line 90, in list_users\n    items, total, dept_map = UserService.list_users(\nTypeError: cannot unpack non-iterable NoneType object"}
{"ts": "2025-08-22T14:44:27", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "c897a7d122bf427a8126fbb89f0edf2e", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 133, in wrapper\n    return fn(*args, **kwargs)\n  File \"D:\\TestTrackingSystem\\controllers\\department_controller.py\", line 159, in list_members\n    members, total = DepartmentMemberService.list_members(\n  File \"D:\\TestTrackingSystem\\services\\department_member_service.py\", line 61, in list_members\n    if not dept or dept.status == \"deleted\":\nAttributeError: 'Department' object has no attribute 'status'"}
{"ts": "2025-08-22T14:48:36", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "88b19b6953674ebe8bf4eed64e91a4ce", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 133, in wrapper\n    return fn(*args, **kwargs)\n  File \"D:\\TestTrackingSystem\\controllers\\department_controller.py\", line 159, in list_members\n    members, total = DepartmentMemberService.list_members(\n  File \"D:\\TestTrackingSystem\\services\\department_member_service.py\", line 61, in list_members\n    if not dept or dept.status == \"deleted\":\nAttributeError: 'Department' object has no attribute 'status'"}
{"ts": "2025-08-22T15:43:59", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "60e87e9185f14a87bf9ebeef63dbafa6", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 133, in wrapper\n    return fn(*args, **kwargs)\n  File \"D:\\TestTrackingSystem\\controllers\\department_controller.py\", line 92, in get_department\n    return json_response(data=dept.to_dict(with_counts=True, with_members=with_members))\nTypeError: Department.to_dict() got an unexpected keyword argument 'with_counts'"}
{"ts": "2025-08-22T15:44:17", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "135755fc647149cfa9874da5bb96d9ee", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 133, in wrapper\n    return fn(*args, **kwargs)\n  File \"D:\\TestTrackingSystem\\controllers\\department_controller.py\", line 92, in get_department\n    return json_response(data=dept.to_dict(with_counts=True, with_members=with_members))\nTypeError: Department.to_dict() got an unexpected keyword argument 'with_counts'"}
{"ts": "2025-08-22T15:57:54", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "10a050aa55f9468d85d7fadd910ba24b", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 133, in wrapper\n    return fn(*args, **kwargs)\n  File \"D:\\TestTrackingSystem\\controllers\\department_controller.py\", line 110, in update_department\n    return json_response(message=\"更新成功\", data=dept.to_dict(with_counts=True))\nTypeError: Department.to_dict() got an unexpected keyword argument 'with_counts'"}
{"ts": "2025-08-22T16:18:08", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "261133b15a244a3f80159b0887acb0b4", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 133, in wrapper\n    return fn(*args, **kwargs)\n  File \"D:\\TestTrackingSystem\\controllers\\department_controller.py\", line 104, in update_department\n    active_raw = data.get(\"active\", \"\").strip()\nAttributeError: 'bool' object has no attribute 'strip'"}
{"ts": "2025-08-22T16:49:47", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "86aa2df5615a4d7e91123d874548f31c", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 133, in wrapper\n    return fn(*args, **kwargs)\n  File \"D:\\TestTrackingSystem\\controllers\\department_controller.py\", line 30, in create_department\n    dept = DepartmentService.create(\n  File \"D:\\TestTrackingSystem\\services\\department_service.py\", line 27, in create\n    dept = DepartmentRepository.create(name=name, code=code, description=description, status=\"active\")\n  File \"D:\\TestTrackingSystem\\repositories\\department_repository.py\", line 19, in create\n    dept = Department(name=name.strip(), code=code.strip() if code else None,\n  File \"<string>\", line 4, in __init__\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\state.py\", line 571, in _initialize_instance\n    with util.safe_reraise():\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\state.py\", line 569, in _initialize_instance\n    manager.original_init(*mixed[1:], **kwargs)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\decl_base.py\", line 2179, in _declarative_constructor\n    raise TypeError(\nTypeError: 'status' is an invalid keyword argument for Department"}
{"ts": "2025-08-22T16:49:54", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "7b4351dba24a478a96f15f390c36cb9e", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 133, in wrapper\n    return fn(*args, **kwargs)\n  File \"D:\\TestTrackingSystem\\controllers\\department_controller.py\", line 30, in create_department\n    dept = DepartmentService.create(\n  File \"D:\\TestTrackingSystem\\services\\department_service.py\", line 27, in create\n    dept = DepartmentRepository.create(name=name, code=code, description=description, status=\"active\")\n  File \"D:\\TestTrackingSystem\\repositories\\department_repository.py\", line 19, in create\n    dept = Department(name=name.strip(), code=code.strip() if code else None,\n  File \"<string>\", line 4, in __init__\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\state.py\", line 571, in _initialize_instance\n    with util.safe_reraise():\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\state.py\", line 569, in _initialize_instance\n    manager.original_init(*mixed[1:], **kwargs)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\decl_base.py\", line 2179, in _declarative_constructor\n    raise TypeError(\nTypeError: 'status' is an invalid keyword argument for Department"}
{"ts": "2025-08-22T16:51:03", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "fbdbe96eddcd4c30aa457f4e57281712", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 133, in wrapper\n    return fn(*args, **kwargs)\n  File \"D:\\TestTrackingSystem\\controllers\\department_controller.py\", line 30, in create_department\n    dept = DepartmentService.create(\n  File \"D:\\TestTrackingSystem\\services\\department_service.py\", line 27, in create\n    dept = DepartmentRepository.create(name=name, code=code, description=description, status=\"active\")\n  File \"D:\\TestTrackingSystem\\repositories\\department_repository.py\", line 19, in create\n    dept = Department(name=name.strip(), code=code.strip() if code else None,\n  File \"<string>\", line 4, in __init__\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\state.py\", line 571, in _initialize_instance\n    with util.safe_reraise():\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\state.py\", line 569, in _initialize_instance\n    manager.original_init(*mixed[1:], **kwargs)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\decl_base.py\", line 2179, in _declarative_constructor\n    raise TypeError(\nTypeError: 'status' is an invalid keyword argument for Department"}
{"ts": "2025-08-22T16:51:06", "level": "ERROR", "logger": "app", "msg": "UNHANDLED EXCEPTION", "request_id": "45f2b31ca2514f038c9a471d5198fea0", "exc": "Traceback (most recent call last):\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n  File \"D:\\TestTrackingSystem\\controllers\\auth_helpers.py\", line 133, in wrapper\n    return fn(*args, **kwargs)\n  File \"D:\\TestTrackingSystem\\controllers\\department_controller.py\", line 30, in create_department\n    dept = DepartmentService.create(\n  File \"D:\\TestTrackingSystem\\services\\department_service.py\", line 27, in create\n    dept = DepartmentRepository.create(name=name, code=code, description=description, status=\"active\")\n  File \"D:\\TestTrackingSystem\\repositories\\department_repository.py\", line 19, in create\n    dept = Department(name=name.strip(), code=code.strip() if code else None,\n  File \"<string>\", line 4, in __init__\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\state.py\", line 571, in _initialize_instance\n    with util.safe_reraise():\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\state.py\", line 569, in _initialize_instance\n    manager.original_init(*mixed[1:], **kwargs)\n  File \"D:\\TestTrackingSystem\\.venv\\lib\\site-packages\\sqlalchemy\\orm\\decl_base.py\", line 2179, in _declarative_constructor\n    raise TypeError(\nTypeError: 'status' is an invalid keyword argument for Department"}
